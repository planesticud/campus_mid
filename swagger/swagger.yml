swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /admision/{id}:
    get:
      tags:
      - admision
      description: consultar admision por id
      operationId: AdmisionController.GetAdmision
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
    put:
      tags:
      - admision
      description: Modificar datos de la admisión
      operationId: AdmisionController.PutAdmision
      parameters:
      - in: path
        name: id
        description: el id de la admisión a modificar
        required: true
        type: string
      - in: body
        name: body
        description: body Modificar Admisión content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /descuentoacademico/descuentoacademico:
    post:
      tags:
      - descuentoacademico
      description: Agregar Descuento Academico ud
      operationId: DescuentoController.PostDescuentoAcademico
      parameters:
      - in: body
        name: body
        description: body Agregar Descuento Academico content
        required: true
        schema:
          $ref: '#/definitions/.''hola'''
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /descuentoacademico/descuentoacademico/:
    get:
      tags:
      - descuentoacademico
      description: consultar Descuento Academico por userid
      operationId: DescuentoController.GetDescuentoAcademico
      parameters:
      - in: query
        name: Id
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: idsolicitud
        description: The key for staticblock
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /descuentoacademico/descuentoacademico/{Id}:
    put:
      tags:
      - descuentoacademico
      description: Modificar Descuento Academico
      operationId: DescuentoController.PutDescuentoAcademico
      parameters:
      - in: path
        name: Id
        description: el id de la solicitud de descuento a modificar
        required: true
        type: string
      - in: body
        name: body
        description: body Modificar Descuento Academico content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: :id s empty
    delete:
      tags:
      - descuentoacademico
      description: eliminar Formacion Academica por id de la formacion
      operationId: DescuentoController.DeleteDescuentoAcademico
      parameters:
      - in: path
        name: Id
        description: Id de la formacion academica
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /descuentoacademico/descuentoacademicopersona/:
    get:
      tags:
      - descuentoacademico
      description: consultar Descuento Academico por userid
      operationId: DescuentoController.GetDescuentoAcademicoByPersona
      parameters:
      - in: query
        name: Persona
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /descuentoacademico/descuentodependenciaperiodo/:
    get:
      tags:
      - descuentoacademico
      description: consultar Descuento Academico por userid
      operationId: DescuentoController.GetDescuentoByDependenciaPeriodo
      parameters:
      - in: query
        name: Dependencia
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: Periodo
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /descuentoacademico/descuentopersonaperiododependencia/:
    get:
      tags:
      - descuentoacademico
      description: consultar Descuento Academico por userid
      operationId: DescuentoController.GetDescuentoByPersonaPeriodoDependencia
      parameters:
      - in: query
        name: Persona
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: Dependencia
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: Periodo
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /experiencia_laboral/:
    post:
      tags:
      - experiencia_laboral
      description: Agregar Experiencia Laboral
      operationId: ExperienciaLaboralController.PostExperienciaLaboral
      parameters:
      - in: body
        name: body
        description: body Agregar EXperiencia Laboral content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /experiencia_laboral/{id}:
    get:
      tags:
      - experiencia_laboral
      description: consultar Experiencia Laboral por userid
      operationId: ExperienciaLaboralController.GetExperienciaLaboral
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
    put:
      tags:
      - experiencia_laboral
      description: Modificar Experiencia Laboral
      operationId: ExperienciaLaboralController.PutExperienciaLaboral
      parameters:
      - in: path
        name: id
        description: el id de la experiencia laboral a modificar
        required: true
        type: string
      - in: body
        name: body
        description: body Modificar Experiencia Laboral content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
    delete:
      tags:
      - experiencia_laboral
      description: eliminar Experiencia Laboral por id
      operationId: ExperienciaLaboralController.DeleteExperienciaLaboral
      parameters:
      - in: path
        name: id
        description: Id de la Experiencia Laboral
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /formacion/formacionacademica:
    post:
      tags:
      - formacion
      description: Agregar Formacion Academica ud
      operationId: FormacionController.PostFormacionAcademica
      parameters:
      - in: body
        name: body
        description: body Agregar Formacion Academica content
        required: true
        schema:
          $ref: '#/definitions/.''hola'''
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /formacion/formacionacademica/:
    get:
      tags:
      - formacion
      description: consultar Fromacion Academica por userid
      operationId: FormacionController.GetFormacionAcademica
      parameters:
      - in: query
        name: id
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: idformacion
        description: The key for staticblock
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /formacion/formacionacademica/{id}:
    put:
      tags:
      - formacion
      description: Modificar Formacion Academica
      operationId: FormacionController.PutFormacionAcademica
      parameters:
      - in: path
        name: id
        description: el id de la formacion academica a modificar
        required: true
        type: string
      - in: body
        name: body
        description: body Modificar Formacion Academica content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
    delete:
      tags:
      - formacion
      description: eliminar Formacion Academica por id de la formacion
      operationId: FormacionController.DeleteFormacionAcademica
      parameters:
      - in: path
        name: id
        description: Id de la formacion academica
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /formacion/formacionacademicaente/:
    get:
      tags:
      - formacion
      description: consultar Fromacion Academica por userid
      operationId: FormacionController.GetFormacionAcademicaByEnte
      parameters:
      - in: query
        name: Ente
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: :id is empty
  /organizacion/:
    post:
      tags:
      - organizacion
      description: create Organizacion
      operationId: OrganizacionController.Create
      parameters:
      - in: body
        name: body
        description: body for Organizaciona scontent
        required: true
        schema:
          $ref: '#/definitions/.interface'
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /organizacion/identificacion/:
    get:
      tags:
      - organizacion
      description: get Organizacion by id
      operationId: OrganizacionController.GetByIdentificacion
      parameters:
      - in: query
        name: id
        description: Identification number as id
        required: true
        type: string
      - in: query
        name: tipoid
        description: TipoIdentificacion number as nit
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.Organizacion'
        "403":
          description: :id is empty
  /organizacion/identificacionente/:
    get:
      tags:
      - organizacion
      description: get Organizacion by id
      operationId: OrganizacionController.GetByEnte
      parameters:
      - in: query
        name: Ente
        description: id del ente
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.Organizacion'
        "403":
          description: :Ente is empty
  /persona/ActualizarPersona:
    put:
      tags:
      - persona
      description: Actualizar Persona
      operationId: PersonaController.ActualizarPersona
      parameters:
      - in: body
        name: body
        description: body for Actualizar Persona content
        required: true
        schema:
          $ref: '#/definitions/.PersonaDatosBasicos'
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /persona/ConsultaPersona/:
    get:
      tags:
      - persona
      description: get ConsultaPersona by userid
      operationId: PersonaController.Get One
      parameters:
      - in: query
        name: id
        description: busca por  id del ente
        type: string
      - in: query
        name: userid
        description: busca por nombre de usuario
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.interface{}'
        "403":
          description: :id is empty
  /persona/DatosComplementarios:
    put:
      tags:
      - persona
      description: Guardar Persona
      operationId: PersonaController.PostPersona
      parameters:
      - in: body
        name: body
        description: body for Guardar Persona content
        required: true
        schema:
          $ref: '#/definitions/.PersonaDatosBasicos'
      responses:
        "200":
          description: '{string} models.Persona.Id'
        "403":
          description: body is empty
    post:
      tags:
      - persona
      description: Guardar Persona
      operationId: PersonaController.PostPersona
      parameters:
      - in: body
        name: body
        description: body for Guardar Persona content
        required: true
        schema:
          $ref: '#/definitions/.PersonaDatosBasicos'
      responses:
        "200":
          description: '{string} models.Persona.Id'
        "403":
          description: body is empty
  /persona/DatosComplementarios/{id}:
    get:
      tags:
      - persona
      description: conultar datos complementarios
      operationId: PersonaController.Getdatoscomplementarios
      parameters:
      - in: path
        name: id
        description: consulta de datos complementarios por el Id del ente
        required: true
        type: string
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      responses:
        "200":
          description: '{string} models.Persona.Id'
        "403":
          description: body is empty
  /persona/DatosContacto:
    put:
      tags:
      - persona
      description: Actualizar Datos de Contacto
      operationId: PersonaController.ActualizarDatosContacto
      parameters:
      - in: body
        name: body
        description: body for Actualizar Persona content
        required: true
        schema:
          $ref: '#/definitions/.PersonaDatosBasicos'
      responses:
        "200":
          description: '{string} models.Persona.Id'
        "403":
          description: body is empty
    post:
      tags:
      - persona
      description: Guardar Datos de Contacto
      operationId: PersonaController.PostDatosContacto
      parameters:
      - in: body
        name: body
        description: body for Guardar datos contacto content
        required: true
        schema:
          $ref: '#/definitions/.PersonaDatosBasicos'
      responses:
        "200":
          description: '{string} models.Persona.Id'
        "403":
          description: body is empty
  /persona/DatosContacto/{id}:
    get:
      tags:
      - persona
      description: Datos de contacto
      operationId: PersonaController.DatosContacto
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /persona/GuardarPersona:
    post:
      tags:
      - persona
      description: Guardar Persona
      operationId: PersonaController.PostPersona
      parameters:
      - in: body
        name: body
        description: body for Guardar Persona content
        required: true
        schema:
          $ref: '#/definitions/.{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
  /persona/RegistrarUbicaciones:
    post:
      tags:
      - persona
      description: Registrar Ubicaciones
      operationId: PersonaController.RegistrarUbicaciones
      parameters:
      - in: body
        name: body
        description: body for Registrar Ubicaciones content
        required: true
        schema:
          $ref: '#/definitions/.map[string]interface{}'
      responses:
        "200":
          description: '{}'
        "403":
          description: body is empty
definitions:
  .'hola':
    type: object
  .{}:
    type: object
  .Organizacion:
    type: object
  .PersonaDatosBasicos:
    type: object
  .interface:
    type: object
  .interface{}:
    type: object
  .map[string]interface{}:
    type: object
tags:
- name: persona
  description: |
    PersonaController ...
- name: formacion
  description: |
    FormacionController ...
- name: descuentoacademico
  description: |
    DescuentoController ...
- name: experiencia_laboral
  description: |
    FormacionController ...
- name: organizacion
  description: |
    OrganizacionController operations for Organizacion
- name: admision
  description: |
    AdmisionController ...
